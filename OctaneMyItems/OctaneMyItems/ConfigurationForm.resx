<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAFBQAAAEAIAC4BgAAFgAAACgAAAAUAAAAKAAAAAEAIAAAAAAAQAYAAAAAAAAAAAAAAAAAAAAA
        AABaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWodaWlrMWlpazFpaWmNaWloAWlpaAFpa
        WgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloDWlpa81pa
        Wv9aWlr/WlpatFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaS1pa
        WqJaWloYWlpaGFpaWpBaWlr/Wlpa/1paWv9aWlr5WlpaflpaWhtaWlpOWlpa1VpaWkJaWloAWlpaAFpa
        WgBaWloAWlpaAFpaWkVaWlr5Wlpa/1paWvNaWlr5Wlpa/1paWv9aWlr/Wlpa/1paWv9aWlr/Wlpa/1pa
        Wv9aWlr/Wlpa9lpaWkhaWloAWlpaAFpaWgBaWloAWlpa21paWv9aWlr/Wlpa/1paWv9aWlr/Wlpa21pa
        WqVaWlqoWlpa21paWv9aWlr/Wlpa/1paWv9aWlr/WlpapVpaWgBaWloAWlpaAFpaWgBaWlpRWlpa/1pa
        Wv9aWlr/Wlpa2FpaWjZaWloAWlpaAFpaWgBaWloAWlpaP1paWttaWlr/Wlpa/1paWvNaWlobWlpaAFpa
        WgBaWloAWlpaAFpaWidaWlr8Wlpa/1paWttaWloJWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaCVpa
        WsxaWlr/Wlpa/FpaWiRaWloAWlpaAFpaWgBaWloAWlpakFpaWv9aWlr/WlpaPFpaWgBaWloAWlpaAFpa
        WgBaWloAWlpaAFpaWgBaWloAWlpaMFpaWv9aWlr/Wlpak1paWgBaWloAWlpaXVpaWrdaWlr5Wlpa/1pa
        WslaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaw1paWv9aWlr/Wlpa81pa
        Wo1aWlq6Wlpa/1paWv9aWlr/WlpanFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpa
        WgBaWlqcWlpa/1paWv9aWlr/WlpatFpaWrRaWlr/Wlpa/1paWv9aWlqcWlpaAFpaWgBaWloAWlpaAFpa
        WgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWpxaWlr/Wlpa/1paWv9aWlq6WlpailpaWvNaWlr/Wlpa/1pa
        WsZaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpayVpaWv9aWlr2WlpatFpa
        Wl1aWloAWlpaAFpaWpZaWlr/Wlpa/1paWjBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpa
        Wj9aWlr/Wlpa/1paWodaWloAWlpaAFpaWgBaWloAWlpaHlpaWvxaWlr/Wlpa0lpaWgxaWloAWlpaAFpa
        WgBaWloAWlpaAFpaWgBaWloPWlpa21paWv9aWlr8WlpaJ1paWgBaWloAWlpaAFpaWgBaWlobWlpa81pa
        Wv9aWlr/Wlpa3lpaWj9aWloAWlpaAFpaWgBaWloAWlpaP1paWt5aWlr/Wlpa/1paWv9aWlpLWlpaAFpa
        WgBaWloAWlpaAFpaWqVaWlr/Wlpa/1paWv9aWlr/Wlpa/1paWttaWlqoWlpamVpaWsxaWlr/Wlpa/1pa
        Wv9aWlr/Wlpa/1paWttaWloAWlpaAFpaWgBaWloAWlpaSFpaWvZaWlr/Wlpa/1paWv9aWlr/Wlpa/1pa
        Wv9aWlr/Wlpa/1paWv9aWlr8Wlpa9lpaWv9aWlr2WlpaP1paWgBaWloAWlpaAFpaWgBaWloAWlpaQlpa
        WtVaWlpOWlpaGFpaWn5aWlr5Wlpa/1paWv9aWlr/WlpajVpaWhhaWloeWlpaolpaWkhaWloAWlpaAFpa
        WgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWrRaWlr/Wlpa/1paWvNaWloDWlpaAFpa
        WgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloAWlpaXVpa
        WsxaWlrAWlpadVpaWgBaWloAWlpaAFpaWgBaWloAWlpaAFpaWgBaWloA/w/wAP4P8ADgAHAAwAAwAMAA
        MADA8DAAwfgwAMP8MAAH/gAAB/4AAAf+AAAH/gAAw/wwAMH4MADA8DAAwAAwAMAAMADgAHAA/wfwAP8P
        8AA=
</value>
  </data>
</root>